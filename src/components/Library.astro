---
export interface Props {
  postDivSelector: string
}

const {postDivSelector} = Astro.props;
---
<div id="library"></div>

<input value={postDivSelector} name="postDivSelector" id="postDivSelector" hidden />

<script>
  const cache = await caches.open('cozy-reader');
  const url = new URL(window.location.href);
  const response = await cache.match(url)
  if (!response) {
    await cache.add(url);
  }

  const postDivSelector = document.getElementById('postDivSelector') as HTMLInputElement;
  const postDiv = document.querySelector(postDivSelector?.value);

  const cachedResponses = await cache.keys();
  const library = document.getElementById('library');
  const list = document.createElement('ul');
  cachedResponses.forEach(response => {
    const {url} = response;
    const link = document.createElement('a');
    link.innerText = url;
    link.href = url;
    link.onclick = async (e) => {
      e.preventDefault();
      const fullResponse = await cache.match(url)
      fullResponse?.text().then(data => {
        const html = document.createElement('html');
        html.innerHTML = data;
        const body = html.querySelector('body');
        const newPost = body?.querySelector('#post');
        console.log(body?.querySelector('#post'));
        if (postDiv && newPost?.innerHTML) {
          postDiv.innerHTML = (newPost.innerHTML)
        }
      });

    }
    const item = document.createElement('li');
    item.appendChild(link);
    list?.appendChild(item);
  })
  library?.appendChild(list);
</script>